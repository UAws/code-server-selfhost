# This configuration file is ported from the nginx repo:
# See https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/static/mandatory.yaml
{{- if eq .Values.ingress.useDefault  true}}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: custom-headers
  namespace: {{ .Release.Namespace | quote }}
data:
  # The default timeout to receive a response from the backend is
  # 15 seconds. This is a little low for applications like webpack
  # which may need extra time to compile resources upon receiving
  # a request.
  # See https://www.envoyproxy.io/docs/envoy/latest/configuration/http/http_filters/router_filter#x-envoy-upstream-rq-timeout-ms
  X-Envoy-Upstream-Rq-Timeout-Ms: "60000"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: nginx-configuration
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
data:
  proxy-set-headers: "{{ .Release.Namespace }}/custom-headers"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: tcp-services
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
data:
  22: "{{ .Release.Namespace }}/envproxy:2222"
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: udp-services
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nginx-ingress-serviceaccount
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: nginx-ingress-clusterrole-{{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - endpoints
      - nodes
      - pods
      - secrets
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - "extensions"
      - "networking.k8s.io"
    resources:
      - ingresses/status
    verbs:
      - update
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  name: nginx-ingress-role
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<ingress-controller-leader>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - ingress-controller-leader-{{ .Release.Namespace }}
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  - apiGroups:
      - ""
    resources:
      - endpoints
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  name: nginx-ingress-role-nisa-binding
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: nginx-ingress-role
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: {{ .Release.Namespace | quote }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  # The cluster role binding needs to be namespaced to avoid
  # reassigning the subject each time someone makes a push.
  name: nginx-ingress-clusterrole-nisa-binding-{{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: nginx-ingress-clusterrole-{{ .Release.Namespace }}
subjects:
  - kind: ServiceAccount
    name: nginx-ingress-serviceaccount
    namespace: {{ .Release.Namespace | quote }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-ingress-controller
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ingress-nginx
        app.kubernetes.io/part-of: ingress-nginx
      annotations:
        prometheus.io/port: "10254"
        prometheus.io/scrape: "true"
    spec:
      # wait up to five minutes for the drain of connections
      terminationGracePeriodSeconds: 300
      serviceAccountName: nginx-ingress-serviceaccount
      nodeSelector:
        beta.kubernetes.io/os: linux
{{- include "coder.serviceTolerations" . | indent 6 }}
      containers:
        - name: nginx-ingress-controller
          image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.26.1
          args:
            - /nginx-ingress-controller
              # The ingress-class points the nginx controller to our
              # "web-ingress" ingress resource.
            - --ingress-class={{ .Release.Namespace }}
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
            - --publish-service=$(POD_NAMESPACE)/ingress-nginx
            - --annotations-prefix=nginx.ingress.kubernetes.io
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
            # www-data -> 33
            runAsUser: 33
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: http
              containerPort: 80
            - name: https
              containerPort: 443
          livenessProbe:
            failureThreshold: 3
            exec:
              command:
                - curl
                - s
                - http://localhost:10254/healthz
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          readinessProbe:
            failureThreshold: 3
            exec:
              command:
                - curl
                - s
                - http://localhost:10254/healthz
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          lifecycle:
            preStop:
              exec:
                command:
                  - /wait-shutdown

---
kind: Service
apiVersion: v1
metadata:
  name: ingress-nginx
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
spec:
  externalTrafficPolicy: Local
  type: LoadBalancer
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/part-of: ingress-nginx
  ports:
    - name: http
      port: 80
      targetPort: http
    - name: https
      port: 443
      targetPort: https
{{- if eq .Values.ssh.enable true }}
    - name: ssh
      port: 22
      targetPort: 22
      protocol: TCP
{{- end }}
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: web-ingress
  namespace: {{ .Release.Namespace | quote }}
  annotations:
    # This class definition connects the nginx ingress controller
    # to the web-ingress.
    kubernetes.io/ingress.class: {{ .Release.Namespace }}
    # A body size of 0 prevents 413 status codes when trying to
    # push an image.
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    {{- if .Values.ingress.additionalAnnotations }}
    {{- range .Values.ingress.additionalAnnotations }}
    {{ . }}
    {{- end }}
    {{- end }}
spec:
{{- include "coder.ingress.tls" . }}
  rules:
  - host: {{ .Values.ingress.host | quote }}
    http:
      paths:
      - path: /proxy/
        backend:
          serviceName: envproxy
          servicePort: 8080
      - path: /
        backend:
          serviceName: cemanager
          servicePort: 8080
{{- if ne .Values.devurls.host "" }}
  - host: {{ .Values.devurls.host | quote }}
    http:
      paths:
      - path: /
        backend:
          serviceName: envproxy
          servicePort: 8080
{{- end }}
---
{{- end }}
