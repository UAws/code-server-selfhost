---
# envwatcher was originally designed to be a cron job,
# unfortunately istio v1.2 and earlier does not play well
# with jobs since the side car will never exit, causing a
# gradual leak of zombie jobs. Since we cannot assume 1.3
# or later is running in a customer's environment we are
# forced to run this as a deployment that loops internally.
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    coder.deployment: envwatcher
  name: envwatcher
  namespace: {{ .Release.Namespace | quote }}
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      coder.deployment: envwatcher
  template:
    metadata:
      labels:
        coder.deployment: envwatcher
    spec:
      # coder:coder
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      restartPolicy: Always
      terminationGracePeriodSeconds: 60
      serviceAccountName: cemanager
{{- include "coder.serviceTolerations" . | indent 6 }}
      containers:
        - name: envwatcher
          image: {{ .Values.envwatcher.image | quote }}
          imagePullPolicy: {{ .Values.imagePullPolicy | quote }}
          command:
            - /bin/bash
            - -c
            - |
              echo Waiting on db;
              /wait_postgres.sh --host="$DB_HOST" -U "$DB_USER" --port="$DB_PORT";
              echo Starting entrypoint.sh;
              exec /entrypoint.sh envwatcher
          env:
            - name: AUTOOFF_ENABLED
              value: {{ .Values.autooff.enable | quote }}
            - name: HUMAN_LOG
              value: {{ .Values.logging.human | quote }}
            - name: JSON_LOG
              value: {{ .Values.logging.json | quote }}
            - name: STACKDRIVER_LOG
              value: {{ .Values.logging.stackdriver | quote }}
            - name: ENVBUILDER_IMAGE
              value: {{ .Values.envbuilder.image | quote }}
            - name: DOCKERD_IMAGE
              value: {{ .Values.dockerd.image | quote}}
            - name: ENVIRONMENT_SERVICE_ACCOUNT
              value: "environments"
            - name: CLUSTER_DOMAIN_SUFFIX
              value: {{ .Values.clusterDomainSuffix | quote }}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
{{- include "coder.environments.configMapEnv" . | indent 12 }}
{{- include "coder.postgres.env" . | indent 12 }}
{{- include "coder.resources" .Values.envwatcher.resources | indent 10 }}
{{- include "coder.volumeMounts" . | indent 10 }}
{{- include "coder.volumes" . | indent 6 }}
